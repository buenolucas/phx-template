version: 2.1

defaults_backend: &defaults_backend
  working_directory: ~/arvore
  docker:
    - image: circleci/elixir:1.8.2
      environment:
        MIX_ENV: dev
    - image: circleci/mysql:8.0.17
      command: --default-authentication-plugin=mysql_native_password --sql-mode="NO_ENGINE_SUBSTITUTION"
      environment:
        MYSQL_ROOT_PASSWORD: rootpw
        MYSQL_DATABASE: bookstore_test
        MYSQL_USER: circleci
        MYSQL_PASSWORD: circleci

defaults_frontend: &defaults_frontend
  working_directory: ~/arvore
  docker:
    - image: circleci/node:10.16

jobs:
  build_backend:
    <<: *defaults_backend
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-build-cache-{{ checksum "mix.lock" }}
            - v1-build-cache-
      - run: # TODO: put rust in the image instead of installing every time
          name: Install Rust
          command: |
            curl https://sh.rustup.rs | sh -s -- -y
            echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Build Application
          command: |
            mix local.rebar --force
            mix local.hex --force
            mix do deps.get, compile --warnings-as-errors --all-warnings
      - save_cache:
          key: v1-build-cache-{{ checksum "mix.lock" }}
          paths:
            - deps
            - _build
            - ~/.mix
      - persist_to_workspace:
          root: ~/
          paths:
            - arvore
            - .mix

  code_analysis_backend:
    <<: *defaults_backend
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dialyzer-cache-{{ checksum "mix.lock" }}
            - v1-dialyzer-cache-{{ .Branch }}-
            - v1-dialyzer-cache-
      - run: # TODO: put rust in the image instead of installing every time
          name: Install Rust
          command: |
            curl https://sh.rustup.rs | sh -s -- -y
            echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
      - attach_workspace:
          at: ~/
      - run:
          name: Run Formatter
          command: mix format --check-formatted
      # TODO: add credo
      # TODO: add dialyzer

  unit_tests_backend:
    <<: *defaults_backend
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v1-tests-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-tests-{{ .Branch }}-
            - v1-tests-
      - run: # TODO: put rust in the image instead of installing every time
          name: Install Rust
          command: |
            curl https://sh.rustup.rs | sh -s -- -y
            echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Wait for Database
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: # TODO: put mysql in the image instead of installing every time
          name: Install MySQL Client
          command: |
            sudo apt-get update
            sudo apt-get install mysql-client
      - run:
          name: Setup database
          command: |
            sudo mysql -h 127.0.0.1 -uroot -prootpw -e "GRANT ALL PRIVILEGES ON *.* TO 'circleci'@'%';"
            sudo mysql -h 127.0.0.1 -uroot -prootpw -e "CREATE DATABASE IF NOT EXISTS bookstore_test;"
            mysql -h 127.0.0.1 -u circleci -pcircleci bookstore_test < priv/repo/structure.sql
            mix ecto.migrate
      - run:
          name: Run Tests
          command: mix coveralls.html --raise --exclude bookwire_ftp --exclude aws_upload --exclude ignore_temporary

      - save_cache:
          key: v1-tests-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - _build
      - store_test_results:
          path: _build/circle_ci_test/lib/arvore

  unit_tests_frontend:
    <<: *defaults_frontend
    steps:
      - checkout
      # TODO: cache front end dependencies
      - run:
          name: Run tests
          command: |
            cd frontend
            npm install
            npm run test -- -u

  end_to_end_cypress:
    <<: *defaults_backend
    steps:
      - checkout
      # TODO: cache front end dependencies
      - run:
          name: Run cypress tests
          command: |
            npm install
            mix phx.server -i
            npm run cypress:run

  # TODO: add static code analysis to frontend

workflows:
  version: 2
  continuous_integration:
    jobs:
      - build_backend
      - code_analysis_backend:
          requires:
            - build_backend
      - unit_tests_backend:
          requires:
            - build_backend
